name: Pull Request Opened

env:
  APP_NAME: njsa
  API_NAME: njsa-api

on:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  workflow_dispatch:
  pull_request:
    branches:
    - dev

jobs:
  build-frontend:
    name: Build & Push Frontend
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build & Push
        uses: ./.github/actions/build-push-container
        with:
          context: ./frontend
          image_name: ${{ env.APP_NAME }}
          image_registry: ${{ secrets.IMAGE_REGISTRY }}
          image_registry_user: ${{ secrets.IMAGE_REGISTRY_USER }}
          image_registry_password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}

  build-api:
    name: Build & Push Backend
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build & Push
        uses: ./.github/actions/build-push-container
        with:
          context: ./backend
          image_name: ${{ env.API_NAME }}
          image_registry: ${{ secrets.IMAGE_REGISTRY }}
          image_registry_user: ${{ secrets.IMAGE_REGISTRY_USER }}
          image_registry_password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}

  deploy-dev:
    name: Deploy to Dev
    environment:
      name: dev
    runs-on: ubuntu-latest
    needs: 
      - build-frontend
      - build-api
    timeout-minutes: 12
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy to Dev
        uses: ./.github/actions/deploy-to-environment
        with:
          app_name: ${{ env.APP_NAME }}
          api_name: ${{ env.API_NAME }}
          environment: dev
          job_name: dev
          namespace_prefix: ${{ secrets.NAMESPACE_PREFIX }}
          openshift_server: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          njsa_api_config: ${{ secrets.NJSA_API_CONFIG }}
          njsa_api_secret: ${{ secrets.NJSA_API_SECRET }}
          cronjob_args: ${{ secrets.CRONJOB_ARGS }}
          react_app_app_domain: ${{ secrets.REACT_APP_APP_DOMAIN }}
          react_app_api_domain: ${{ secrets.REACT_APP_API_DOMAIN }}
          react_app_app_path: ${{ secrets.REACT_APP_APP_PATH }}
          react_app_auth_scope: ${{ secrets.REACT_APP_AUTH_SCOPE }}
          react_app_auth_url: ${{ secrets.REACT_APP_AUTH_URL }}
          react_app_auth_realm: ${{ secrets.REACT_APP_AUTH_REALM }}
          react_app_auth_role: ${{ secrets.REACT_APP_AUTH_ROLE }}
          react_app_auth_client_id: ${{ secrets.REACT_APP_AUTH_CLIENT_ID }}
          

  deploy-test:
    name: Deploy to Test
    environment:
      name: test
    runs-on: ubuntu-latest
    needs: 
      - build-frontend
      - build-api
      - deploy-dev
    timeout-minutes: 12
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy to Test
        uses: ./.github/actions/deploy-to-environment
        with:
          app_name: ${{ env.APP_NAME }}
          api_name: ${{ env.API_NAME }}
          environment: test
          job_name: test
          namespace_prefix: ${{ secrets.NAMESPACE_PREFIX }}
          openshift_server: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          njsa_config: ${{ secrets.NJSA_CONFIG }}
          njsa_api_config: ${{ secrets.NJSA_API_CONFIG }}
          njsa_api_secret: ${{ secrets.NJSA_API_SECRET }}
          cronjob_args: ${{ secrets.CRONJOB_ARGS }}