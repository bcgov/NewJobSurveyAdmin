apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ include "chart.fullname" . }}-postgresql
  labels:
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    name: postgresql
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: postgresql
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: postgresql
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: postgresql
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: postgresql
        - name: POSTGRESQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-admin-password
              name: postgresql
        image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:ed2da0eed3f495f5455f490cdf7f7943420f64b0cf541271a2d315a3f9e9744c
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /usr/libexec/check-container
            - --live
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: postgresql
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 512Mi
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgresql-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: postgresql
  test: false
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - postgresql
      from:
        kind: ImageStreamTag
        name: postgresql:10-el8
        namespace: openshift
      lastTriggeredImage: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:ed2da0eed3f495f5455f490cdf7f7943420f64b0cf541271a2d315a3f9e9744c
    type: ImageChange
  - type: ConfigChange
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "chart.fullname" . }}-postgresql
  labels:
  {{- include "chart.labels" . | nindent 4 }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.pvc.postgresql.storageRequest | quote }}
  storageClassName: {{ .Values.pvc.postgresql.storageClass | quote }}
  volumeMode: Filesystem
  volumeName: pvc-138f5887-1492-467f-b2d8-52be9ba926bd
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "chart.fullname" . }}-postgresql
  labels:
  {{- include "chart.labels" . | nindent 4 }}
data:
  database-admin-password: {{ required "postgresql.databaseAdminPassword is required"
    .Values.postgresql.databaseAdminPassword | b64enc | quote }}
  database-name: {{ required "postgresql.databaseName is required" .Values.postgresql.databaseName
    | b64enc | quote }}
  database-password: {{ required "postgresql.databasePassword is required" .Values.postgresql.databasePassword
    | b64enc | quote }}
  database-user: {{ required "postgresql.databaseUser is required" .Values.postgresql.databaseUser
    | b64enc | quote }}
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "chart.fullname" . }}-postgresql
  labels:
  {{- include "chart.labels" . | nindent 4 }}
spec:
  type: {{ .Values.postgresql.type }}
  selector:
    name: postgresql
  {{- include "chart.selectorLabels" . | nindent 4 }}
  ports:
	{{- .Values.postgresql.ports | toYaml | nindent 2 }}